1. 初始化一个Git仓库
    git init
2. 添加文件到Git仓库，分两步：
    git add <file>
    git commit -m "说明"
3. 查看当前仓库的状态
    git status
4. 查看修改的内容
    git diff <文件>
5. HEAD指向的版本就是当前版本，切换版本使用命令
    git reset --hard commit_id
6. 查看提交历史
    git log
7. 查看命令历史
    git reflog
8. 查看工作区和版本库里面最新版本的区别
    git diff HEAD -- readme.txt
9. 丢弃工作区的修改
    git checkout -- file
10.丢弃暂存区的修改
    1）把暂存区的修改撤销掉重新回到工作区
	git reset HEAD file
	2）丢弃工作区的修改
	git checkout -- file
11.删除一个文件
    git rm
	
12.关联一个远程库
    git remote add origin git@server-name:path/repo-name.git
	例如：git remote add origin git@github.com:zhongguobaiyangyihao/Kyle_Sprocomm.git
13.推送maser分支的所有内容到远程
    1）第一次推送
	git push -u origin master   //加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
	2）以后推送
	git push origin master
14.从远程库克隆
    git clone git@server-name:path/repo-name.git
	例如：git clone git@github.com:zhongguobaiyangyihao/Kyle_Sprocomm.git
15.分支的创建和删除
    1）列出本地已经存在的分支，并且在当前分支的前面加“*”号标记
	git branch
	2）创建分支
	git branch <name>
	3）切换分支
	git checkout <name>
	4）创建+切换分支
	git checkout -b <name>
	5）合并某分支到当前分支
	git merge <name>
	6）删除本地分支
	git branch -d <name>
	7）列出远程分支
	git branch -r
	8) 列出本地分支和远程分支
	git branch -a
	9) 删除远程分支
	git branch -d -r <name>
	注：这个只是删除本地的索引，而不是真正删除远程分支的内容，要想真正删除远程分支上的内容，可以这样：
	git push origin :remote_branch
	注：冒号前面的空格不能少，相当于把一个空分支push到server上，等于删除该分支。
	10)分支重命名
	git branch -m oldbranchname newbranchname
	11）推送本地分支到远程分支
	git push origin local_branch:remote_branch
	注：如果remote_branch不存在则会自动创建分支；用git branch localbranch，git push origin remotebranch两步，localbranch和remotebranch名字必须相同。
